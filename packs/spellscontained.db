{"_id":"AHwVV0m9vy7L78y2","name":"Greater Invisibility","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You or a creature you touch becomes Invisible until the spell ends. Anything the target is wearing or carrying is Invisible as long as it is on the target’s person.</p>","chat":"","unidentified":""},"source":"PHB pg. 246","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":4,"school":"ill","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"AHwVV0m9vy7L78y2","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Greater Invisibility","type":"script","scope":"global","command":"let TokenUpdate = game.macros.getName(\"TokenUpdate\");\r\nlet target = canvas.tokens.get(args[1])\r\nif(args[0] === \"on\"){\r\nTokenUpdate.execute(args[1],{\"hidden\": true});\r\nChatMessage.create({content: target.name + \" is invisible\"})\r\n} else {\r\n    TokenUpdate.execute(args[1],{\"hidden\": false});\r\n    ChatMessage.create({content: target.name + \" is no longer invisible\"})\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/fog-water-air-3.jpg"}
{"_id":"B2e9U9vkRwN76PfA","name":"Eyebite","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>For the spell’s Duration, your eyes become an inky void imbued with dread power. One creature of your choice within 60 feet of you that you can see must succeed on a Wisdom saving throw or be affected by one of the following Effects of your choice for the Duration. On each of your turns until the spell ends, you can use your action to target another creature but can’t target a creature again if it has succeeded on a saving throw against this casting of eyebite.</p>\n<ul>\n<li><strong>Asleep</strong>. The target falls Unconscious. It wakes up if it takes any damage or if another creature uses its action to shake the sleeper awake.</li>\n<li><strong>Panicked</strong>. The target is Frightened of you. On each of its turns, the frigh⁠tened creature must take the Dash action and move away from you by the safest and shortest available route, unless there is nowhere to move. If the target moves to a place at least 60 feet away from you where it can no longer see you, this effect ends.</li>\n<li><strong>Sickened</strong>. The target has disadvantage on Attack rolls and Ability Checks. At the end of each of its turns, it can make another Wisdom saving throw. If it succeeds, the effect ends</li>\n</ul>","chat":"","unidentified":""},"source":"PHB pg. 238","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":""},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"flat"},"level":6,"school":"nec","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":false,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":" @target @attributes.spelldc ","mode":"+","targetSpecific":false,"id":1,"itemId":"B2e9U9vkRwN76PfA","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Eyebite","type":"script","scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\nlet ActorGetFlag = game.macros.getName(\"ActorSetFlag\");\r\n\r\n// get the hookId here\r\nconst hookIdFlag = ActorGetFlag.execute(args[1], \"world\", \"EyebiteSpell\");\r\nconsole.log(hookIdFlag)\r\n\r\nif (args[0] === \"on\") {\r\n    const hookId = Hooks.on(\"updateCombat\", (combat, update) => {\r\n        if (!(\"round\" in update || \"turn\" in update)) return;\r\n        if (combat.combatant.tokenId === args[1]) {\r\n            new Dialog({\r\n                title: \"Eyebite options\",\r\n                content: \"<p>Target a token and select the effect</p>\",\r\n                buttons: {\r\n                    one: {\r\n                        label: \"Asleep\",\r\n                        callback: () => {\r\n                            for (let target of game.user.targets) {\r\n                                let save_roll = new Roll(`1d20 + ${target.actor.data.data.abilities.wis.save}`).roll();\r\n\r\n                                save_roll.toMessage({\r\n                                    speaker: ChatMessage.getSpeaker({ token: target }),\r\n                                    rollMode: \"blindroll\"\r\n                                });\r\n                                if (save_roll.total < args[2]) {\r\n                                    ChatMessage.create({ content: target.name + \"failed the save with a \" + save_roll.total })\r\n                                    game.cub.applyCondition(\"Unconscious\", target)\r\n                                } else ChatMessage.create({ content: target.name + \"passed the save with a \" + save_roll.total })\r\n                            }\r\n                        }\r\n                    },\r\n                    two: {\r\n                        label: \"Panicked\",\r\n                        callback: () => {\r\n                            for (let target of game.user.targets) {\r\n                                let save_roll = new Roll(`1d20 + ${target.actor.data.data.abilities.wis.save}`).roll();\r\n\r\n                                save_roll.toMessage({\r\n                                    speaker: ChatMessage.getSpeaker({ token: target }),\r\n                                    rollMode: \"blindroll\"\r\n                                });\r\n                                if (save_roll.total < args[2]) {\r\n                                    ChatMessage.create({ content: target.name + \"failed the save with a \" + save_roll.total })\r\n                                    game.cub.applyCondition(\"Unconscious\", target)\r\n                                } else ChatMessage.create({ content: target.name + \"passed the save with a \" + save_roll.total })\r\n\r\n                            }\r\n                        }\r\n                    },\r\n                    three: {\r\n                        label: \"Sickened\",\r\n                        callback: () => {\r\n                            for (let target of game.user.targets) {\r\n                                let save_roll = new Roll(`1d20 + ${target.actor.data.data.abilities.wis.save}`).roll();\r\n\r\n                                save_roll.toMessage({\r\n                                    speaker: ChatMessage.getSpeaker({ token: target }),\r\n                                    rollMode: \"blindroll\"\r\n                                });\r\n                                if (save_roll.total < args[2]) {\r\n                                    ChatMessage.create({ content: target.name + \"failed the save with a \" + save_roll.total })\r\n                                    game.cub.applyCondition(\"Poisoned\", target)\r\n                                } else ChatMessage.create({ content: target.name + \"passed the save with a \" + save_roll.total })\r\n                            }\r\n                        }\r\n                    },\r\n                }\r\n            }).render(true);\r\n\r\n        }\r\n    });\r\n    ActorSetFlag.execute(args[1], \"world\", \"EyebiteSpell\", hookId);\r\n    ChatMessage.create({ content: target.name + \" is blessed with Eyebite\" });\r\n    new Dialog({\r\n        title: \"Eyebite options\",\r\n        content: \"<p>Target a token and select the effect</p>\",\r\n        buttons: {\r\n            one: {\r\n                label: \"Asleep\",\r\n                callback: () => {\r\n                    for (let target of game.user.targets) {\r\n                        let save_roll = new Roll(`1d20 + ${target.actor.data.data.abilities.wis.save}`).roll();\r\n\r\n                        save_roll.toMessage({\r\n                            speaker: ChatMessage.getSpeaker({ token: target }),\r\n                            rollMode: \"blindroll\"\r\n                        });\r\n                        if (save_roll.total < args[2]) {\r\n                            ChatMessage.create({ content: target.name + \"failed the save with a \" + save_roll.total })\r\n                            game.cub.applyCondition(\"Unconscious\", target)\r\n                        } else ChatMessage.create({ content: target.name + \"passed the save with a \" + save_roll.total })\r\n                    }\r\n                }\r\n            },\r\n            two: {\r\n                label: \"Panicked\",\r\n                callback: () => {\r\n                    for (let target of game.user.targets) {\r\n                        let save_roll = new Roll(`1d20 + ${target.actor.data.data.abilities.wis.save}`).roll();\r\n\r\n                        save_roll.toMessage({\r\n                            speaker: ChatMessage.getSpeaker({ token: target }),\r\n                            rollMode: \"blindroll\"\r\n                        });\r\n                        if (save_roll.total < args[2]) {\r\n                            ChatMessage.create({ content: target.name + \"failed the save with a \" + save_roll.total })\r\n                            game.cub.applyCondition(\"Unconscious\", target)\r\n                        } else ChatMessage.create({ content: target.name + \"passed the save with a \" + save_roll.total })\r\n\r\n                    }\r\n                },\r\n            },\r\n            three: {\r\n                label: \"Sickened\",\r\n                callback: () => {\r\n                    for (let target of game.user.targets) {\r\n                        let save_roll = new Roll(`1d20 + ${target.actor.data.data.abilities.wis.save}`).roll();\r\n\r\n                        save_roll.toMessage({\r\n                            speaker: ChatMessage.getSpeaker({ token: target }),\r\n                            rollMode: \"blindroll\"\r\n                        });\r\n                        if (save_roll.total < args[2]) {\r\n                            ChatMessage.create({ content: target.name + \"failed the save with a \" + save_roll.total })\r\n                            game.cub.applyCondition(\"Poisoned\", target)\r\n                        } else ChatMessage.create({ content: target.name + \"passed the save with a \" + save_roll.total })\r\n                    }\r\n                }\r\n            },\r\n        }\r\n    }).render(true)\r\n\r\n}\r\nif (args[0] === \"off\") {\r\n    ChatMessage.create({ content: \"Eyebite is removed\" });\r\n    Hooks.off(\"updateCombat\", hookIdFlag);\r\n    ActorUnSetFlag.execute(args[1], \"world\", \"EyebiteSpell\");\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/evil-eye-red-3.jpg"}
{"name":"Haste","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>Choose a willing creature that you can see within range. Until the spell ends, the target’s speed is doubled, it gains a +2 bonus to AC, it has advantage on Dexterity Saving Throws, and it gains an additional action on each of its turns. That action can be used only to take the Attack (one weapon attac⁠k only), Dash, Disengage, Hide, or Use an Object action.</p>\n<p>When the spell ends, the target can’t move or take Actions until after its next turn, as a wave of lethargy sweeps over it.</p>","chat":"","unidentified":""},"source":"PHB pg. 250","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":3,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A shaving of licorice root","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.execute","value":"HasteSpell @target","mode":"+","targetSpecific":false,"id":1,"itemId":"n4AhwxY8hCTyI5nb","active":true,"_targets":[],"label":"Macro Execute"},{"modSpecKey":"data.attributes.ac.value","value":"2","mode":"+","targetSpecific":false,"id":2,"itemId":"n4AhwxY8hCTyI5nb","active":true,"_targets":[]}]}},"img":"systems/dnd5e/icons/spells/haste-royal-2.jpg","_id":"BFsvTH5uGE4S1Q98"}
{"_id":"D09fABAhtBIagOma","name":"Enhance Ability","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You touch a creature and bestow upon it a magical enhancement. Choose one of the following effects; the target gains that effect until the spell ends.</p>\n<ul>\n<li><strong>Bear’s Endurance</strong>. The target has advantage on Constitution Checks. It also gains 2d6 Temporary Hit Points, which are lost when the spell ends.</li>\n<li><strong>Bull’s Strength</strong>. The target has advantage on Strength Checks, and his or her carrying capacity doubles.</li>\n<li><strong>Cat’s Grace</strong>. The target has advantage on Dexterity Checks. It also doesn’t take damage from Falling 20 feet or less if it isn’t Incapacitated.</li>\n<li><strong>Eagle’s Splendor</strong>. The target has advantage on Charisma Checks.</li>\n<li><strong>Fox’s Cunning</strong>. The target has advantage on Intelligence Checks.</li>\n<li><strong>Owl’s Wisdom</strong>. The target has advantage on Wisdom Checks.</li>\n</ul>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>\n<p>&nbsp;</p>","chat":"","unidentified":""},"source":"PHB pg. 237","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"heal","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["2d6","temphp"]],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Fur or a feather from a beast","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"D09fABAhtBIagOma","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Enhance Ability","type":"script","scope":"global","command":"const targetArray = [args[1]]\r\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\nlet ActorGetFlag = game.macros.getName(\"ActorGetFlag\");\r\n\r\n\r\nif (args[0] === \"on\") {\r\n    targetArray.forEach((element) => {\r\n        let target = canvas.tokens.get(args[1]);\r\n        if (target && !target.getFlag('world', 'enhanceAbility')) {\r\n            new Dialog({\r\n                title: \"Choose enhance ability effect for \" + target.name,\r\n                buttons: {\r\n                    one: {\r\n                        label: \"Bear's Endurance\",\r\n                        callback: () => {\r\n                            let formula = `2d6`;\r\n                            let amount = new Roll(formula).roll().total;\r\n                            ActorSetFlag.execute(args[1], 'world', 'enhanceAbility', {\r\n                                name: \"bear\",\r\n                            });\r\n                            ChatMessage.create({ content: target.name + \" gains \" + amount + \" temp Hp\" })\r\n                            ActorUpdate.execute(args[1], { \"data.attributes.hp.temp\": amount });\r\n\r\n                        }\r\n                    },\r\n                    two: {\r\n                        label: \"Bull's Strength\",\r\n                        callback: () => {\r\n                            ChatMessage.create({ content: target.name + \"s encumberance is doubled\" })\r\n                            ActorSetFlag.execute(args[1], 'world', 'enhanceAbility', {\r\n                                name: \"bull\"\r\n                            });\r\n                            ActorSetFlag.execute(args[1], 'dnd5e', 'powerfulBuild', true)\r\n                        }\r\n                    },\r\n                    three: {\r\n                        label: \"Other\",\r\n                        callback: () => {\r\n                            ActorSetFlag.execute(args[1], 'world', 'enhanceAbility', {\r\n                                name: \"other\",\r\n                            });\r\n                            ChatMessage.create({ content: \"A non automated Ability was enhanced for \" + target.name })\r\n                        }\r\n                    }\r\n                }\r\n            }).render(true);\r\n        }\r\n    })\r\n}\r\nif (args[0] === \"off\") {\r\n    targetArray.forEach((element) => {\r\n        let target = canvas.tokens.get(args[1]);\r\n        let flag = target.actor.getFlag('world', 'enhanceAbility');\r\n        if (flag.name === \"bull\") ActorUnSetFlag.execute(args[1], 'dnd5e', 'powerfulBuild', false)\r\n        ActorUnSetFlag.execute(args[1], 'world', 'enhanceAbility')\r\n        ChatMessage.create({ content: \"Enhance Ability has expired\" })\r\n    }\r\n    )\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/haste-royal-2.jpg"}
{"_id":"HiVpRAEe41H6oP7H","name":"Heroes' Feast","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You bring forth a great feast, including magnificent food and drink. The feast takes 1 Hour to consume and disappears at the end of that time, and the beneficial Effects don’t set in until this hour is over. Up to twelve creatures can partake of the feast.</p>\n<p>A creature that partakes of the feast gains several benefits. The creature is cured of all Diseases and poison, becomes immune to poison and being Frightened, and makes all Wisdom Saving Throws with advantage. Its hit point maximum also increases by 2d10, and it gains the same number of Hit Points. These benefits last for 24 hours.</p>","chat":"","unidentified":""},"source":"PHB pg. 250","activation":{"type":"minute","cost":10,"condition":""},"duration":{"value":24,"units":"hour"},"target":{"value":0,"units":"","type":""},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":6,"school":"con","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A gem-encrusted bowl worth at least 1000gp, which the spell consumes","consumed":true,"cost":1000,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":false,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"HiVpRAEe41H6oP7H","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Heroes' Feast","type":"script","scope":"global","command":"const targetArray = [args[1]]\r\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\nlet ActorGetFlag = game.macros.getName(\"ActorGetFlag\");\r\nlet formula = \"2d10\";\r\nlet amount = new Roll(formula).roll().total;\r\n\r\nif (args[0] === \"on\") {\r\n    targetArray.forEach((element) => {\r\n        let target = canvas.tokens.get(args[1]);\r\n        let hpMax = target.actor.data.data.attributes.hp.max\r\n        let hp = target.actor.data.data.attributes.hp.value\r\n        let conditionImmunity = target.actor.data.data.traits.ci.value\r\n        conditionImmunity.push(\"frightened\")\r\n        ActorUpdate.execute(args[1], { \"data.attributes.hp.max\": (hpMax + amount), \"data.attributes.hp.value\": (hp + amount) });\r\n        ChatMessage.create({content: target.name + \" gains \" + amount + \" Max HP\"})\r\n        ActorSetFlag.execute(args[1], 'world', 'HeroesFeast', amount)\r\n    })\r\n};\r\nif (args[0] === \"off\") {\r\n    targetArray.forEach((element) => {\r\n        let target = canvas.tokens.get(args[1]);\r\n        let amount = ActorGetFlag.execute(args[1], 'world', 'HeroesFeast')\r\n        let hpMax = target.actor.data.data.attributes.hp.max\r\n        let conditionImmunity = target.actor.data.data.traits.ci.value\r\n        const index = resistances.indexOf(\"frightened\")\r\n        resistances.splice(index, 1)\r\n        ActorUpdate.execute(args[1], { \"data.attributes.hp.max\": (hpMax - amount) });\r\n        ChatMessage.create({content: target.name + \"'s Max HP returns to normal\"})\r\n        ActorUnSetFlag.execute(args[1], 'world', 'HeroesFeast')\r\n    })\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/heal-royal-3.jpg"}
{"_id":"R7254tpCeg8PUJAs","name":"Heroism","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>A willing creature you touch is imbued with bravery. Until the spell ends, the creature is immune to being Frightened and gains Temporary Hit Points equal to your Spellcasting ability modifier at the start of each of its turns. When the spell ends, the target loses any remaining tempora⁠ry hit point⁠s from this spell.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 2nd level or higher, you can target one additional creature for each slot level above 1st.</p>","chat":"","unidentified":""},"source":"PHB pg. 250","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[["@mod","temphp"]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"enc","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"macro.itemMacro","value":"@target @abilities.wis.mod","mode":"+","targetSpecific":false,"id":1,"itemId":"R7254tpCeg8PUJAs","active":true,"_targets":[]}],"equipActive":true,"alwaysActive":false},"itemacro":{"macro":{"data":{"name":"Heroism","type":"script","scope":"global","command":"let mod = args[2];\r\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\nlet ActorGetFlag = game.macros.getName(\"ActorGetFlag\");\r\n\r\n// get the hookId here\r\nconst hookIdFlag = ActorGetFlag.execute(args[1], \"world\", \"heroismUpdateCombatHookId\");\r\nconsole.log(hookIdFlag)\r\n\r\nif (args[0] === \"on\") {\r\nChatMessage.create({content : \"Heroism is applied to targets\" })\r\n    const hookId = Hooks.on(\"updateCombat\", (combat, update) => {\r\n        if (!(\"round\" in update || \"turn\" in update)) return;\r\n        if (combat.combatant.tokenId === args[1]) {\r\n            let target = canvas.tokens.get(args[1]);\r\n            ActorUpdate.execute(args[1],{ \"data.attributes.hp.temp\": mod });\r\n            ChatMessage.create({ content: \"Heroism continues on \" + target.name  })\r\n        }\r\n    });\r\n    ActorSetFlag.execute(args[1], \"world\", \"heroismUpdateCombatHookId\", hookId);\r\n\r\n}\r\nif (args[0] === \"off\") {\r\nChatMessage.create({content : \"Heroism ends\"});\r\n    Hooks.off(\"updateCombat\", hookIdFlag);\r\n    ActorUnSetFlag.execute(args[1], \"world\", \"heroismUpdateCombatHookId\");\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/heal-sky-2.jpg"}
{"_id":"SjbrDJaMNEqNgJ9Q","name":"Invisibility","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>A creature you touch becomes invisible until the spell ends. Anything the target is wearing or carrying is invisible as long as it is on the target's person. The spell ends for a target that attacks or casts a spell.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 254","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"ill","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"An eyelash encased in gum arabic","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"SjbrDJaMNEqNgJ9Q","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Invisibility","type":"script","scope":"global","command":"let TokenUpdate = game.macros.getName(\"TokenUpdate\");\r\nlet target = canvas.tokens.get(args[1])\r\nif(args[0] === \"on\"){\r\nTokenUpdate.execute(args[1],{\"hidden\": true});\r\nChatMessage.create({content: target.name + \" is invisible\"})\r\n} else {\r\n    TokenUpdate.execute(args[1],{\"hidden\": false});\r\n    ChatMessage.create({content: target.name + \" is no longer invisible\"})\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/fog-sky-2.jpg"}
{"_id":"XI7Bz1gNI3KveizU","name":"Fire Shield","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>Thin and wispy flames wreathe your body for the Duration, shedding bright light in a 10-foot radius and dim light for an additional 10 feet. You can end the spell early by using an action to dismiss it.</p>\n<p>The flames provide you with a warm shi⁠eld or a chill sh⁠ield, as you choose. The warm shi⁠eld grants you Resistance to cold damage, and the chill shi⁠eld grants you resist⁠ance to fire damage.</p>\n<p>In addition, whenever a creature within 5 feet of you hits you with a melee Attack, the shiel⁠d erupts with flame. The attacker takes 2d8 fire damage from a warm shie⁠ld, or 2d8 cold damage from a cold sh⁠ield.</p>","chat":"","unidentified":""},"source":"PHB pg. 242","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":""},"formula":"2d8","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":4,"school":"evo","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A bit of phosphorus or a firefly","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"XI7Bz1gNI3KveizU","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Fire Shield","type":"script","scope":"global","command":"let SpellOff = game.macros.getName(\"SpellOff\");\r\nasync function choose(options = [], prompt = ``) {\r\n    let value = await new Promise((resolve, reject) => {\r\n\r\n        let dialog_options = (options[0] instanceof Array)\r\n            ? options.map(o => `<option value=\"${o[0]}\">${o[1]}</option>`).join(``)\r\n            : options.map(o => `<option value=\"${o}\">${o}</option>`).join(``);\r\n\r\n        let content = `${prompt}<br><select id=\"choice\">${dialog_options}</select>`;\r\n\r\n        new Dialog({\r\n            content,\r\n            buttons: { OK: { label: `OK`, callback: async (html) => { resolve(html.find('#choice').val()); } } }\r\n        }).render(true);\r\n    });\r\n    return value;\r\n}\r\n\r\n(async () => {\r\n    let choice = await choose(Object.keys(actor.data.flags.world), `Choose something : `);\r\n    if (choice === \"barkskin\") {\r\n        SpellOff.execute(\"Barkskin\")\r\n    }\r\n    if (choice === \"DE Blinded\" || \"DE Deafened\") {\r\n        SpellOff.execute(\"BlindDeaf\")\r\n    } \r\n    if (choice === \"darkvisionSpell\") {\r\n        SpellOff.execute(\"Darkvision\")\r\n    } \r\n    if (choice === \"elementalWeapon\") {\r\n        SpellOff.execute(\"Darkvision\")\r\n    } \r\n    if (choice === \"enhanceAbility\") {\r\n        SpellOff.execute(\"Enhance Ability\")\r\n    } \r\n    if (choice === \"EyebiteSpell\") {\r\n        SpellOff.execute(\"Eyebite\")\r\n    } \r\n    if (choice === \"FireShield\") {\r\n        SpellOff.execute(\"FireShield\")\r\n    } \r\n    if (choice === \"Haste\") {\r\n        SpellOff.execute(\"Haste\")\r\n    } \r\n    if (choice === \"HeroesFeast\") {\r\n        SpellOff.execute(\"HeroesFeast\")\r\n    } \r\n    if (choice === \"ProtectionFromEnergy\") {\r\n        SpellOff.execute(\"ProtectionFromEnergy\")\r\n    } \r\n    if (choice === \"magicWeapon\") {\r\n        SpellOff.execute(\"Magic Weapon\")\r\n    } \r\n    if (choice === \"banishment\") {\r\n        SpellOff.execute(\"Banishment\")\r\n    } \r\n     if (choice === \"enlageReduceSpell\") {\r\n        SpellOff.execute(\"EnlargeReduce\")\r\n    } \r\n     if (choice === \"heroismUpdateCombatHookId\") {\r\n        SpellOff.execute(\"Heroism\")\r\n    } \r\n     if (choice === \"Longstrider\") {\r\n        SpellOff.execute(\"Longstrider\")\r\n    } \r\n     if (choice === \"rayOfFrost\") {\r\n        SpellOff.execute(\"Ray of Frost\")\r\n    } \r\n     if (choice === \"shillelagh\") {\r\n        SpellOff.execute(\"Shillelagh\")\r\n    }\r\n    if (choice === \"AlterSelfSpell\") {\r\n        SpellOff.execute(\"Alter Self\")\r\n    }\r\n})();","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/protect-red-3.jpg"}
{"_id":"XYbUMnTI9Ux9xVOX","name":"Magic Weapon","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You touch a nonmagical weapon. Until the spell ends, that weapon becomes a magic weapon with a +1 bonus to Attack rolls and Damage Rolls.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 4th level or higher, the bonus increases to +2. When you use a spell slot of 6th level or higher, the bonus increases to +3.</p>","chat":"","unidentified":""},"source":"PHB pg. 257","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":0,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":" @target @item.level","mode":"+","targetSpecific":false,"id":1,"itemId":"XYbUMnTI9Ux9xVOX","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Magic Weapon","type":"script","scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet targetActor = target.actor;\r\nlet weapons = targetActor.items.filter(i => i.data.type === `weapon`);\r\nlet weapon_content = ``;\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\nlet ActorGetFlag = game.macros.getName(\"ActorGetFlag\");\r\n\r\nfor (let weapon of weapons) {\r\n    weapon_content += `<option value=${weapon.id}>${weapon.name}</option>`;\r\n}\r\nif (args[0] === \"on\") {\r\n    let content = `\r\n<div class=\"form-group\">\r\n  <label>Weapons : </label>\r\n  <select name=\"weapons\">\r\n    ${weapon_content}\r\n  </select>\r\n</div>`;\r\n\r\n    new Dialog({\r\n        content,\r\n        buttons:\r\n        {\r\n            Ok:\r\n            {\r\n                label: `Ok`,\r\n                callback: (html) => {\r\n                    let itemId = html.find('[name=weapons]')[0].value;\r\n                    let item = targetActor.items.get(itemId);\r\n                    let copy_item = duplicate(item);\r\n                    console.log(copy_item)\r\n                    function value_limit(val, min, max) {\r\n                        return val < min ? min : (val > max ? max : val)\r\n                    };\r\n                    let spellLevel = Math.floor(args[2] / 2);\r\n                    let bonus = value_limit(spellLevel, 1, 3);\r\n                    let wpDamage = copy_item.data.damage.parts[0][0]\r\n                    ActorSetFlag.execute(args[1], `world`, `magicWeapon`, {\r\n                        damage :bonus,\r\n                        weapon : itemId,\r\n                        weaponDmg : wpDamage,\r\n                    });\r\n                    copy_item.data.attackBonus = (copy_item.data.attackBonus + bonus)\r\n                    copy_item.data.damage.parts[0][0] = (wpDamage + \" + \" + bonus)\r\n                    targetActor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n                }\r\n            },\r\n            Cancel:\r\n            {\r\n                label: `Cancel`\r\n            }\r\n        }\r\n    }).render(true);\r\n}\r\n\r\nif (args[0] === \"off\") {\r\n    let flag = target.actor.getFlag('world','magicWeapon')\r\n    let wpDamage = flag.weaponDmg\r\n    let itemId = flag.weapon\r\n    let item = target.actor.items.get(itemId);\r\n    console.log(item)\r\n    let bonus = flag.damage;\r\n    let copy_item = duplicate(item);\r\n    console.log(copy_item)\r\n    copy_item.data.attackBonus = (copy_item.data.attackBonus - bonus);\r\n    copy_item.data.damage.parts[0][0] = wpDamage\r\n    targetActor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n    ActorUnSetFlag.execute(args[1], `world`, `magicWeapon`);    \r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/enchant-blue-2.jpg"}
{"_id":"ZABFkx0NPbsXTi2a","name":"Shillelagh","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>The wood of a club or quarterstaff you are holding is imbued with nature's power. For the duration, you can use your spellcasting ability instead of Strength for the attack and damage rolls of melee attacks using that weapon, and the weapon's damage die becomes a d8. The weapon also becomes magical, if it isn't already. The spell ends if you cast it again or if you let go of the weapon.</p>","chat":"","unidentified":""},"source":"PHB pg. 275","activation":{"type":"bonus","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"units":"spec","type":"object"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":0,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A shamrock leaf, and a club or quarterstaff","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":false,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"ZABFkx0NPbsXTi2a","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Shillelagh","type":"script","scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet weapons = target.actor.items.filter(i => i.data.type === `weapon`);\r\nlet weapon_content = ``;\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\n\r\n\r\nfor (let weapon of weapons) {\r\n    weapon_content += `<option value=${weapon.id}>${weapon.name}</option>`;\r\n}\r\nif (args[0] === \"on\" && !target.getFlag('world', 'shillelagh')) {\r\n    let content = `\r\n<div class=\"form-group\">\r\n  <label>Weapons : </label>\r\n  <select name=\"weapons\">\r\n    ${weapon_content}\r\n  </select>\r\n</div>`;\r\n\r\n    new Dialog({\r\n        title: \"Choose a club or quarterstaff\",\r\n        content,\r\n        buttons:\r\n        {\r\n            Ok:\r\n            {\r\n                label: `Ok`,\r\n                callback: (html) => {\r\n                    console.log(html.find('[name=weapons]')[0].value);\r\n                    let itemId = html.find('[name=weapons]')[0].value;\r\n                    let item = token.actor.items.get(itemId);\r\n                    console.log(item)\r\n                    let copy_item = duplicate(item);\r\n                    ActorSetFlag.execute(args[1], `world`, `shillelagh`, {\r\n                        id : itemId,\r\n                        damage : copy_item.data.damage.parts[0][0]    \r\n                    });\r\n                    let damage = copy_item.data.damage.parts[0][0]\r\n                    console.log(typeof damage)\r\n                    var newdamage = damage.replace(/1d(4|6)/g,\"1d8\");\r\n                    console.log(newdamage)\r\n                    copy_item.data.damage.parts[0][0] = newdamage;\r\n                    copy_item.data.ability = \"wis\"\r\n                    target.actor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n                    ChatMessage.create({content: copy_item.name + \" is empowered\"})\r\n                }\r\n            },\r\n            Cancel:\r\n            {\r\n                label: `Cancel`\r\n            }\r\n        }\r\n    }).render(true);\r\n}\r\n\r\nif (args[0] === \"off\") {\r\n    let flag = target.actor.getFlag(`world`, `shillelagh`);\r\n    let itemId = flag.id;\r\n    let damage = flag.damage;\r\n    let item = token.actor.items.get(itemId);\r\n    let copy_item = duplicate(item);\r\n    copy_item.data.damage.parts[0][0] = damage;\r\n    copy_item.data.ability = \"\"\r\n    target.actor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n    ActorUnSetFlag.execute(args[1], `world`, `shillelagh`);\r\n    ChatMessage.create({content: copy_item.name + \" returns to normal\"})\r\n\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/enchant-jade-1.jpg"}
{"_id":"ZXO4jlyWFCjC1aBS","name":"Enlarge/Reduce","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You cause a creature or an object you can see within range to grow larger or smaller for the Duration. Choose either a creature or an object that is neither worn nor carried. If the target is unwilling, it can make a Constitution saving throw. On a success, the spell has no effect.</p>\n<p>If the target is a creature, everything it is wearing and carrying changes size with it. Any item dropped by an affected creature returns to normal size at once.</p>\n<p><strong>Enlarge</strong>. The target’s size doubles in all dimensions, and its weight is multiplied by eight. This growth increases its size by one category—from Medium to Large, for example. If there isn’t enough room for the target to double its size, the creature or object attains the maximum possible size in the space available. Until the spell ends, the target also has advantage on Strength Checks and Strength Saving Throws. The target’s Weapons also grow to match its new size. While these Weapons are enlarged, the target’s attacks with them deal 1d4 extra damage.</p>\n<p><strong>Reduce</strong>. The target’s size is halved in all dimensions, and its weight is reduced to one-eighth of normal. This reduction decreases its size by one category—from Medium to Small, for example. Until the spell ends, the target also has disadvantage on Strength Checks and Strength Saving Throws. The target’s Weapons also shrink to match its new size. While these Weapons are reduced, the target’s attacks with them deal 1d4 less damage (this can’t reduce the damage below 1).</p>","chat":"","unidentified":""},"source":"PHB pg. 237","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A pinch of powdered iron","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"ZXO4jlyWFCjC1aBS","active":true,"_targets":[]}]}},"img":"systems/dnd5e/icons/spells/link-blue-2.jpg"}
{"_id":"a9nLQUZuyIirkTEA","name":"Protection from Energy","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>For the duration, the willing creature you touch has resistance to one damage type of your choice: acid, cold, fire, lightning, or thunder.</p>","chat":"","unidentified":""},"source":"PHB pg. 270","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":3,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"a9nLQUZuyIirkTEA","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Protection from Energy","type":"script","scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet ActorGetFlag = game.macros.getName(\"ActorGetFlag\");\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\n\r\nif (args[0] === \"on\") {\r\n    let d = new Dialog({\r\n        title: 'Choose a damage type',\r\n        content: `\r\n          <form class=\"flexcol\">\r\n            <div class=\"form-group\">\r\n              <select id=\"element\">\r\n                <option value=\"acid\">Acid</option>\r\n                <option value=\"cold\">Cold</option>\r\n                <option value=\"fire\">Fire</option>\r\n                <option value=\"lightning\">Lightning</option>\r\n                <option value=\"thunder\">Thunder</option>\r\n              </select>\r\n            </div>\r\n          </form>\r\n        `,\r\n        buttons: {\r\n            yes: {\r\n                icon: '<i class=\"fas fa-check\"></i>',\r\n                label: 'Yes',\r\n                callback: (html) => {\r\n                    let element = html.find('#element').val();\r\n                    let resistances = target.actor.data.data.traits.dr.value        \r\n                    resistances.push(element)\r\n                    ActorSetFlag.execute(args[1], 'world', 'ProtectionFromEnergy', element)\r\n                    ChatMessage.create({ content: target.name + \" gains resistnace to \" + element })\r\n                }\r\n            },\r\n        },\r\n    }).render(true);\r\n}\r\nif (args[0] === \"off\") {\r\n    let element = ActorGetFlag.execute(args[1], 'world', 'ProtectionFromEnergy')\r\n    let resistances = target.actor.data.data.traits.dr.value\r\n    const index = resistances.indexOf(element)\r\n    resistances.splice(index, 1)\r\n    ActorUnSetFlag.execute(args[1], 'world', 'ProtectionFromEnergy')\r\n    ChatMessage.create({content : target.name + \"looses resistance to \" + element})\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/protect-jade-2.jpg"}
{"_id":"bGHEGhJRFyXhWSfs","name":"Alter Self","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You assume a different form. When you cast the spell, choose one of the following options, the effects of which last for the duration of the spell. While the spell lasts, you can end one option as an action to gain the benefits of a different one.</p>\n<p><strong>Aquatic Adaptation.&nbsp;</strong>You adapt your body to an aquatic environment, sprouting gills and growing webbing between your fingers. You can breathe underwater and gain a swimming speed equal to your walking speed.</p>\n<p><strong>Change Appearance.&nbsp;</strong>You transform your appearance. You decide what you look like, including your height, weight, facial features, sound of your voice, hair length, coloration, and distinguishing characteristics, if any. You can make yourself appear as a member of another race, though none of your statistics change. You also can't appear as a creature of a different size than you, and your basic shape stays the same; if you're bipedal, you can't use this spell to become quadrupedal, for instance. At any time for the duration of the spell, you can use your action to change your appearance in this way again.</p>\n<p><strong>Natural Weapons.&nbsp;</strong>You grow claws, fangs, spines, horns, or a different natural weapon of your choice. Your unarmed strikes deal 1d6 bludgeoning, piercing, or slashing damage, as appropriate to the natural weapon you chose, and you are proficient with your unarmed strikes. Finally, the natural weapon is magic and you have a +1 bonus to the attack and damage rolls you make using it.</p>","chat":"","unidentified":""},"source":"PHB pg. 211","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":"self"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":false,"ritual":false,"concentration":true},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"effects":[{"modSpecKey":"macro.itemMacro","value":"","mode":"+","targetSpecific":false,"id":1,"itemId":"bGHEGhJRFyXhWSfs","active":true,"_targets":[]}],"equipActive":false,"alwaysActive":false},"itemacro":{"macro":{"data":{"name":"Alter Self","type":"script","scope":"global","command":"let item = actor.items.find(i => i.name === `Unarmed Strike`);\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\n\r\nconsole.log(item)\r\nif (args[0] === \"on\") {\r\n    if (token) {\r\n        new Dialog({\r\n            title: \"Are you using Natural Weapons\",\r\n            content: \"<p>Yes or no</p>\",\r\n            buttons: {\r\n                one: {\r\n                    label: \"Yes\",\r\n                    callback: () => {\r\n                        if (!item){\r\n                            ChatMessage.create({content: \"No unarmed strike found\"})\r\n                            return;\r\n                        }\r\n                        let copy_item = duplicate(item);\r\n                        ActorSetFlag.execute(args[1],'world', 'AlterSelfSpell', item.data.data.damage.parts[0][0])\r\n                        copy_item.data.data.damage.parts[0][0] = \"1d6 +@mod\"\r\n                        actor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n                        ChatMessage.create({content: \"Unarmed strike is altered\"})\r\n                    }\r\n                },\r\n                    two: {\r\n                        label: \"No\",\r\n                        callback: () => ChatMessage.create({ content: `Unarmed strike not altered` })\r\n                },\r\n            }\r\n        }).render(true);\r\n    }\r\n} \r\nif(args[0] === \"off\") {\r\n    let damage = target.actor.getFlag('world', 'Alter self')\r\n    let copy_item = duplicate(item);\r\n    copy_item.data.data.damage.parts[0][0] = damage\r\n    actor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n    ActorUnSetFlag.execute(args[1],'world', 'AlterSelfSpell',);\r\n    ChatMessage.create({ content: `Alter Self expired, unarmed strike returned` })\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/wind-grasp-acid-2.jpg"}
{"_id":"cAj6ASP1o2tvwjTT","name":"Levitate","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>One creature or object of your choice that you can see within range rises vertically, up to 20 feet, and remains suspended there for the duration. The spell can levitate a target that weighs up to 500 pounds. An unwilling creature that succeeds on a Constitution saving throw is unaffected.</p>\n<p>The target can move only by pushing or pulling against a fixed object or surface within reach (such as a wall or a ceiling), which allows it to move as if it were climbing. You can change the target’s altitude by up to 20 feet in either direction on your turn. If you are the target, you can move up or down as part of your move. Otherwise, you can use your action to move the target, which must remain within the spell’s range.</p>\n<p>When the spell ends, the target floats gently to the ground if it is still aloft.</p>","chat":"","unidentified":""},"source":"PHB pg. 255","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":10,"units":"minute"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"Either a small leather loop or a piece of golden wire bent into a cup shape with a long shank on one end","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"cAj6ASP1o2tvwjTT","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Levitate","type":"script","scope":"global","command":"let TokenUpdate = game.macros.getName(\"TokenUpdate\");\r\nlet target = canvas.tokens.get(args[1]);\r\nif (args[0] === \"on\") {\r\n    ChatMessage.create({ content: target.name + \" is levitated 20ft\" })\r\n    TokenUpdate.execute(args[1], { \"elevation\": 20 });\r\n} else {\r\n    TokenUpdate.execute(args[1], { \"elevation\": 0 });\r\n    ChatMessage.create({ content: target.name + \" is returned to the ground\" })\r\n    if (game.modules.get(\"condition-automation\")?.active) {\r\n        ChatMessage.create({content: \"test\"})\r\n        TokenMagic.deleteFiltersOnSelected(\"autoShadow\");\r\n        TokenMagic.deleteFiltersOnSelected(\"autoTwist\");\r\n        TokenMagic.deleteFiltersOnSelected(\"autoBulge\");\r\n    }\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/wind-grasp-magenta-2.jpg"}
{"_id":"ekDcQSsY3e52RJW7","name":"Longstrider","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You touch a creature. The target's speed increases by 10 feet until the spell ends.</p>","chat":"","unidentified":""},"source":"PHB pg. 256","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"util","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":1,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":false},"materials":{"value":"A pinch of dirt","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"ekDcQSsY3e52RJW7","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Longstrider","type":"script","scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\r\nlet TokenSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet TokenUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\nlet speed = parseInt(target.actor.data.data.attributes.speed.value);\r\n\r\nif (args[0] === \"on\" && !target.actor.getFlag('world', 'Longstrider')) {\r\n    let newSpeed = (speed + 10) + \"ft\";\r\n    ActorUpdate.execute(args[1], { \"data.attributes.speed.value\": newSpeed });\r\n    TokenSetFlag.execute(args[1], 'world', 'Longstrider', speed);\r\n    ChatMessage.create({ content: target.name + \" has their speed increased by 10ft\" })\r\n} else if (args[0] === \"off\" ) {\r\n    let newSpeed = target.actor.getFlag('world', 'Longstrider')\r\n    ActorUpdate.execute(args[1], { \"data.attributes.speed.value\": (newSpeed + \"ft\") });\r\n    TokenUnSetFlag.execute(args[1], 'world', 'Longstrider');\r\n    ChatMessage.create({ content: target.name + \" has their speed returned to normal\" })\r\n}\r\n","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/wind-sky-1.jpg"}
{"name":"Blindness/Deafness","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You can blind or deafen a foe. Choose one creature that you can see within range to make a Constitution saving throw. If it fails, the target is either blinded or deafened (your choice) for the duration. At the end of each of its turns, the target can make a Constitution saving throw. On a success, the spell ends.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 3rd level or higher, you can target one additional creature for each slot level above 2nd.</p>","chat":"","unidentified":""},"source":"PHB pg. 219","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":30,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"con","dc":null,"scaling":"spell"},"level":2,"school":"nec","components":{"value":"","vocal":true,"somatic":false,"material":false,"ritual":false,"concentration":false},"materials":{"value":"","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"level","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"YzSbwD21Q0oxKmEU","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Blindness/Deafness","type":"script","scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nif (args[0] === \"on\") {\r\n    new Dialog({\r\n        title: \"Choose an Effect\",\r\n        buttons: {\r\n            one: {\r\n                label: \"Blindness\",\r\n                callback: () => {\r\n                    game.macros.getName(\"BlindExecute\").execute(\"Blinded\", args[1], 1 )\r\n                }\r\n            },\r\n            two: {\r\n                label: \"Deafness\",\r\n                callback: () => {\r\n                    game.macros.getName(\"BlindExecute\").execute(\"Deafened\", args[1], 1 )\r\n                }\r\n            }\r\n        },\r\n    }).render(true);\r\n}\r\nif(args[0] === \"off\"){\r\n    if (target.getFlag('world', 'DE Blinded')) {\r\n        game.macros.getName(\"BlindExecute\").execute(\"Blinded\", args[1], 2 )\r\n    } else if (target.getFlag('world', 'DE Deafened')) {\r\n        game.macros.getName(\"BlindExecute\").execute(\"Deafened\", args[1], 2 )\r\n    }\r\n}\r\n","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/evil-eye-red-2.jpg","_id":"hBw9mMhD6LCcK2zs"}
{"_id":"mro9hQg9Vc5hC1w7","name":"Barkskin","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You touch a willing creature. Until the spell ends, the target's skin has a rough, bark-like appearance, and the target's AC can't be less than 16, regardless of what kind of armor it is wearing.</p>","chat":"","unidentified":""},"source":"PHB pg. 217","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"hour"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":"touch"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell","value":""},"level":2,"school":"trs","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"A handful of oak bark","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"mro9hQg9Vc5hC1w7","active":true,"_targets":[]},{"modSpecKey":"data.attributes.ac.value","value":"16","mode":"=","targetSpecific":false,"id":2,"itemId":"khqqVjNBG599mBx7","active":false,"_targets":[],"label":"Attributes Armor Class"}]},"itemacro":{"macro":{"data":{"name":"Barkskin","type":"script","scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet armour = target.actor.data.data.attributes.ac.value\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\n\r\nif (args[0] === \"on\") {\r\n    if(armour < 16)\r\n    ActorSetFlag.execute(args[1], 'world', 'barkskin', 1)\r\n    DynamicEffects.togglePassive(\"Barkskin\", spell)\r\n    ChatMessage.create({content: target.name + \"'s AC is increased to 16\"})\r\n    \r\n} \r\nif(args[0] === \"off\") {\r\n    DynamicEffects.togglePassive(\"Barkskin\", spell)\r\n    ActorUnSetFlag.execute(args[1], 'world', 'barkskin')\r\n    ChatMessage.create({content: target.name + \"'s AC is returned\"})\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/protect-orange-2.jpg"}
{"_id":"upz8Ttv7L8SnmMuY","name":"Banishment","permission":{"default":0,"XE30TcnpPFgl2g1S":3},"type":"spell","data":{"description":{"value":"<p>You attempt to send one creature that you can see within range to another plane of existence. The target must succeed on a Charisma saving throw or be banished.</p>\n<p>If the target is native to the plane of existence you're on, you banish the target to a harmless demiplane. While there, the target is incapacitated. The target remains there until the spell ends, at which point the target reappears in the space it left or in the nearest unoccupied space if that space is occupied.</p>\n<p>If the target is native to a different plane of existence than the one you're on, the target is banished with a faint popping noise, returning to its home plane. If the spell ends before 1 minute has passed, the target reappears in the space it left or in the nearest unoccupied space if that space is occupied. Otherwise, the target doesn't return.</p>\n<p><strong>At Higher Levels.</strong> When you cast this spell using a spell slot of 5th level or higher, you can target one additional creature for each slot level above 4th.</p>","chat":"","unidentified":""},"source":"PHB pg. 217","activation":{"type":"action","cost":1,"condition":""},"duration":{"value":1,"units":"minute"},"target":{"value":1,"units":"","type":"creature"},"range":{"value":60,"long":0,"units":"ft"},"uses":{"value":0,"max":0,"per":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"save","attackBonus":0,"chatFlavor":"","critical":null,"damage":{"parts":[],"versatile":"","value":""},"formula":"","save":{"ability":"cha","dc":null,"scaling":"spell","value":""},"level":4,"school":"abj","components":{"value":"","vocal":true,"somatic":true,"material":true,"ritual":false,"concentration":true},"materials":{"value":"An item distasteful to the target","consumed":false,"cost":0,"supply":0},"preparation":{"mode":"prepared","prepared":false},"scaling":{"mode":"none","formula":""}},"flags":{"dynamiceffects":{"equipActive":true,"alwaysActive":false,"effects":[{"modSpecKey":"macro.itemMacro","value":"@target","mode":"+","targetSpecific":false,"id":1,"itemId":"upz8Ttv7L8SnmMuY","active":true,"_targets":[]}]},"itemacro":{"macro":{"data":{"name":"Banishment","type":"script","scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\r\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\r\n\r\nif (args[0] === \"on\") {\r\n    target.update({hidden : true});\r\n    ActorSetFlag.execute(args[1], 'world','banishment', 1);\r\n    ChatMessage.create({content: target.name + \"  was banished\"})\r\n    \r\n}\r\nif(args[0]=== \"off\") {\r\n target.update({hidden : false})\r\n ActorUnSetFlag.execute(args[1], 'world', 'banishment');\r\n ChatMessage.create({content: target.name + \"  returned\"})\r\n}","author":"XE30TcnpPFgl2g1S"},"options":{},"apps":{},"compendium":null}}},"img":"systems/dnd5e/icons/spells/link-eerie-3.jpg"}
