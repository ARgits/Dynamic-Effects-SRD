{"name":"Boots of Striding","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\r\nlet TokenSetFlag = game.macros.getName(\"TokenSetFlag\");\r\nlet TokenUnSetFlag = game.macros.getName(\"TokenUnSetFlag\");\r\nlet speed = parseInt(target.actor.data.data.attributes.speed.value);\r\n\r\nif (!target.getFlag('world', 'bootsOfStriding')) {\r\n    let newSpeed = (speed < 30) ? 30 : speed;\r\n    console.log(newSpeed)\r\n    ActorUpdate.execute(args[1], { \"data.attributes.speed.value\": (newSpeed + \"ft\") });\r\n    TokenSetFlag.execute(args[1], 'world', 'bootsOfStriding', speed);\r\n} else if (target.getFlag('world', 'bootsOfStriding')) {\r\n    let newSpeed = target.getFlag('world', 'bootsOfStriding')\r\n    ActorUpdate.execute(args[1], { \"data.attributes.speed.value\": (newSpeed + \"ft\") });\r\n    TokenUnSetFlag.execute(args[1], 'world', 'bootsOfStriding');\r\n}\r\n","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"5VC0iEwRwB2IvUY2"}
{"name":"Aid","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro ","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nif (!target) {\r\n  ChatMessage.create({content: `Token ${args[1]} is no longer in scene`, whisper: ChatMessage.getWhisperIDs(\"GM\")})\r\n  return;\r\n}\r\n\r\nlet increment = 5 * (args[2] - 1);\r\nif (!args[2]) increment = 5;\r\nlet hpMax = target.actor.data.data.attributes.hp.max;\r\nlet hp = target.actor.data.data.attributes.hp.value;\r\n\r\nif (args[0] === \"on\") {\r\n  target.actor.update({\"data.attributes.hp.max\": hpMax + increment, \"data.attributes.hp.value\": hp + increment})\r\nChatMessage.create({content: `Aid Spell: ${target.name} received ${increment} HP`})\r\n} else {\r\n  target.actor.update({\"data.attributes.hp.max\": hpMax - increment, \"data.attributes.hp.value\": Math.min(hp, hpMax - increment)})\r\nChatMessage.create({content: `Aid Spell Expiry: ${target.name} Max HP reduced by ${increment}`})\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"EQUckCxqTELGBy6O"}
{"name":"Boots of Speed","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\r\nlet TokenSetFlag = game.macros.getName(\"TokenSetFlag\");\r\nlet TokenUnSetFlag = game.macros.getName(\"TokenUnSetFlag\");\r\nlet speed = parseInt(target.actor.data.data.attributes.speed.value);\r\n\r\nif (args[0] === \"on\") {\r\n    let newSpeed = speed * 2\r\n    ActorUpdate.execute(args[1],{\"speed\": newSpeed});\r\n    TokenSetFlag.execute(args[1], 'world', 'bootsOfSpeed', speed);\r\n} else {\r\n    let newSpeed = target.getFlag('world', 'bootsOfSpeed')\r\n    ActorUpdate.execute(args[1],{\"speed\": newSpeed});\r\n    TokenUnSetFlag.execute(args[1],'world', 'bootsOfSpeed');\r\n}\r\n","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"IuixADDMctJk3mJ0"}
{"name":"Bane","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro ","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let target = canvas.tokens.get(args[1])\r\nif (!target) {\r\n    ChatMessage.create({content: \"No target found\"})\r\n    return;\r\n}\r\nif (args[0] === \"on\") {\r\nvar params = [{\r\n            filterType: \"field\",\r\n    filterId: \"Bane\",\r\n    shieldType: 10,\r\n    gridPadding: 1,\r\n    color: 0x902005,\r\n    time: 0,\r\n    blend: 5,\r\n    intensity: 0.5,\r\n    lightAlpha: 4,\r\n    lightSize: 0.8,\r\n    scale: 0.5,\r\n    radius: 1,\r\n    chromatic: false,\r\n    animated :\r\n    {\r\n      time : \r\n      { \r\n        active: true, \r\n        speed: 0.0015, \r\n        animType: \"move\" \r\n      }\r\n    }\r\n        }];\r\n}\r\nelse {\r\n     var params = [{ \r\n     filterType: \"field\",\r\n     filterId: \"Bane\",\r\n     enabled: false\r\n     }];\r\n}\r\nTokenMagic.addUpdateFilters(target, params);","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"Mpc83ecN6HAIp0jG"}
{"name":"CUB condition control","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nif (args[2] === 1){\r\n    game.cub.applyCondition(args[0], target)\r\n    let flag = \"DE \" + args[0]\r\n    target.setFlag('world', flag, 1)\r\n} else {\r\n    if(args[2] === 2){\r\n        console.log(\"test\")\r\n        let flag = \"DE \" + args[0]\r\n        game.cub.removeCondition(args[0], target);\r\n        target.unsetFlag('world', flag)\r\n    }\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"eJu7luJizt0iXymV"}
{"name":"ActorUpdate","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"//args[0] = actor ID\r\n//args[1] = update data\r\n\r\nif(!args[0] || !args[1]) return ui.notifications.error(`${this.name}'s arguments are invalid.`);\r\n\r\n(async()=>{\r\n  await canvas.tokens.get(args[0]).actor.update(args[1]);\r\n})();","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"gZ22yWmRBsL6hHxi"}
{"_id":"h53SXiPj68gBkXsP","name":"Heroism","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet mod = args[2];\r\n\r\n// get the hookId here\r\nconst hookIdFlag = target.getFlag(\"world\", \"heroismUpdateCombatHookId\");\r\n\r\n// if we want to register, make sure the hook id doesn't already exist before registering again\r\nif (args[0] === \"on\" && !hookIdFlag) {\r\n    const hookId = Hooks.on(\"updateCombat\", (combat, update) => {\r\n        if (!(\"round\" in update || \"turn\" in update)) return;\r\n        if (combat.combatant.tokenId === args[1]) {\r\n            target.actor.update({ \"data.attributes.hp.temp\": mod });\r\n            ChatMessage.create({ content: target.name + \" gains \" + mod + \"Temp HP\"})\r\n        }\r\n    });\r\n    target.setFlag(\"world\", \"heroismUpdateCombatHookId\", hookId);\r\n// if we want to unregister and the hookId has been saved\r\n} else if (args[0] === \"off\" && hookIdFlag) {\r\n    Hooks.off(\"updateCombat\", hookIdFlag);\r\n    // unset the saved hookId so that we can register again whent the time comes\r\n    target.unsetFlag(\"world\", \"heroismUpdateCombatHookId\");\r\n    ChatMessage.create({ content: target.name + \" looses the effects of Heroism\"})\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[]}
{"name":"False Life","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"New Macro           ","colour":"#ff0000","trigger":""}},"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"if (token) {\r\n    let increment = (args[1]-1)*5\r\n    let formula = `1d4 + 1`;\r\n    let amount = new Roll(formula).roll().total;\r\nChatMessage.create({content: \" False life healing healing is \" + amount + \"+ \" + increment })\r\n    let total= amount + increment\r\n    //Note: Just change the number after the comma to heal/receive other HP values. Negative numbers indicate damage.\r\n    token.actor.update({\"data.attributes.hp.temp\": total}) \r\n} else {\r\n    ui.notifications.notify(\"Please select a token.\");\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"kg3fCG3r92zw3z99"}
{"name":"TokenSetFlag","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"//args[0] = token ID\r\n//args[1]-[3] = update data\r\n\r\nif(!args[0] || !args[1]) return ui.notifications.error(`${this.name}'s arguments are invalid.`);\r\n\r\ncanvas.tokens.get(args[0]).setFlag(args[1], args[2], args[3]);\r\n\r\n","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"lefVX9mOaAfispDq"}
{"name":"Shillelagh","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet weapons = target.actor.items.filter(i => i.data.type === `weapon`);\r\nlet weapon_content = ``;\r\n\r\n\r\nfor (let weapon of weapons) {\r\n    weapon_content += `<option value=${weapon.id}>${weapon.name}</option>`;\r\n}\r\nif (args[0] === \"on\" && !target.getFlag('world', 'shillelagh')) {\r\n    let content = `\r\n<div class=\"form-group\">\r\n  <label>Weapons : </label>\r\n  <select name=\"weapons\">\r\n    ${weapon_content}\r\n  </select>\r\n</div>`;\r\n\r\n    new Dialog({\r\n        title: \"Choose a club or quarterstaff\",\r\n        content,\r\n        buttons:\r\n        {\r\n            Ok:\r\n            {\r\n                label: `Ok`,\r\n                callback: (html) => {\r\n                    console.log(html.find('[name=weapons]')[0].value);\r\n                    let itemId = html.find('[name=weapons]')[0].value;\r\n                    let item = actor.items.get(itemId);\r\n                    let copy_item = duplicate(item);\r\n                    target.setFlag(`world`, `shillelagh`, itemId);\r\n                    copy_item.data.damage.parts[0][0] = \"1d8 +@mod\";\r\n                    copy_item.data.ability = \"wis\"\r\n                    target.actor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n                }\r\n            },\r\n            Cancel:\r\n            {\r\n                label: `Cancel`\r\n            }\r\n        }\r\n    }).render(true);\r\n}\r\n\r\nif (args[0] === \"off\") {\r\n    let itemId = token.getFlag(`world`, `shillelagh`);\r\n    let item = actor.items.get(itemId);\r\n    let copy_item = duplicate(item);\r\n    copy_item.data.damage.parts[0][0] = \"1d6 +@mod\";\r\n    copy_item.data.ability = \"\"\r\n    target.actor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n    target.unsetFlag(`world`, `shillelagh`);\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"n0HgHhrA4YgmYpSK"}
{"name":"Alter Self","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let item = actor.items.find(i => i.name === `Unarmed Strike`);\r\nconsole.log(item)\r\nif (args[0] === \"on\") {\r\n    if (token) {\r\n        new Dialog({\r\n            title: \"Are you using Natural Weapons\",\r\n            content: \"<p>Yes or no</p>\",\r\n            buttons: {\r\n                one: {\r\n                    label: \"Yes\",\r\n                    callback: () => {\r\n                        let copy_item = duplicate(item);\r\n                        token.setFlag('world', 'Alter self', item.data.data.damage.parts[0][0])\r\n                        copy_item.data.damage.parts[0][0] = \"1d6 +@mod\"\r\n                        actor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n                    },\r\n                    two: {\r\n                        label: \"No\",\r\n                        callback: () => ChatMessage.create({ content: `Unarmed strike not altered` })\r\n                    }\r\n                },\r\n                close: () => ChatMessage.create({ content: `No choice made` })\r\n            }\r\n        }).render(true);\r\n    }\r\n} else {\r\n    let damage = token.getFlag('world', 'Alter self')\r\n    let copy_item = duplicate(item);\r\n    copy_item.data.damage.parts[0][0] = damage\r\n    actor.updateEmbeddedEntity(\"OwnedItem\", copy_item);\r\n    ChatMessage.create({ content: `Alter Self expired, unarmed strike returned` })\r\n }","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"o3HHm0OwMg9Is2L5"}
{"name":"TokenUpdate","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"//args[0] = token ID\r\n//args[1] = update data\r\n\r\nif(!args[0] || !args[1]) return ui.notifications.error(`${this.name}'s arguments are invalid.`);\r\n\r\ncanvas.tokens.get(args[0]).update(args[1]);","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"o5hi8GyaO6DgcApN"}
{"name":"Barkskin","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet armour = target.actor.data.data.attributes.ac.value\r\n\r\nif (args[0] === \"on\") {\r\n    let newArmour = armour <= 16 ? 16 : armour\r\n    console.log(newArmour)\r\n    target.setFlag('world', 'barkskin', armour)\r\n    target.actor.update({ \"data.attributes.ac.value\" : newArmour })\r\n} else {\r\n    let newArmour = target.getFlag('world', 'barkskin');\r\n    target.actor.update({ \"data.attributes.ac.value\" : newArmour });\r\n    target.unsetFlag('world', 'barkskin')\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"pTXAs73uCzRgp97J"}
{"name":"BlindDeaf","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nif (args[0] === \"on\") {\r\n    new Dialog({\r\n        title: \"Choose an Effect\",\r\n        buttons: {\r\n            one: {\r\n                label: \"Blindness\",\r\n                callback: () => {\r\n                    game.macros.getName(\"CUB condition control\").execute(\"Blinded\", args[1], 1 )\r\n                }\r\n            },\r\n            two: {\r\n                label: \"Deafness\",\r\n                callback: () => {\r\n                    game.macros.getName(\"CUB condition control\").execute(\"Deafened\", args[1], 1 )\r\n                }\r\n            }\r\n        },\r\n    }).render(true);\r\n} else {\r\n    if (target.getFlag('world', 'DE Blinded')) {\r\n        game.macros.getName(\"CUB condition control\").execute(\"Blinded\", args[1], 2 )\r\n    } else if (target.getFlag('world', 'DE Deafened')) {\r\n        game.macros.getName(\"CUB condition control\").execute(\"Deafened\", args[1], 2 )\r\n    }\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"qIWDOBHG9my7pIxK"}
{"name":"Longstrider","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet originalSpeed = target.actor.data.data.attributes.speed.value\r\nlet speed = parseInt(originalSpeed);\r\nconsole.log(speed)\r\n\r\nif (args[0] === \"on\") {\r\n    let newSpeed = speed + 10\r\n    target.setFlag('world', 'Longstrider', originalSpeed)\r\n    target.actor.update({ \"data.attributes.speed.value\" : (newSpeed + \" ft\") })\r\n    ChatMessage.create({content: target.name + \" has their speed increased by 10ft\"})\r\n} else {\r\n    let newSpeed = target.getFlag('world', 'Longstrider');\r\n    target.actor.update({ \"data.attributes.speed.value\" : newSpeed });\r\n    target.unsetFlag('world', 'Longstrider')\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"tMcHrqTz218PLVwk"}
{"name":"EnlargeReduce","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet originalSize = target.data.width;\r\nlet mwak = target.actor.data.data.bonuses.mwak.damage\r\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\r\nlet TokenUpdate = game.macros.getName(\"TokenUpdate\");\r\nlet TokenSetFlag = game.macros.getName(\"TokenSetFlag\");\r\nlet TokenUnSetFlag = game.macros.getName(\"TokenUnSetFlag\");\r\nif (args[0] === \"on\" && !target.getFlag('world', 'enlageReduceSpell')) {\r\n    if (target) {\r\n        new Dialog({\r\n            title: \"Enlarge or Reduce\",\r\n            buttons: {\r\n                one: {\r\n                    label: \"Enlarge\",\r\n                    callback: () => {\r\n                        let bonus = mwak + \" 1d4\";\r\n                        let enlarge = (originalSize + 1);\r\n                        ActorUpdate.execute(args[1],{\"data.bonuses.mwak.damage\" : bonus });\r\n                        TokenUpdate.execute(args[1],{\"width\": enlarge, \"height\": enlarge});\r\n                        TokenSetFlag.execute(args[1], 'world', 'enlageReduceSpell', originalSize)\r\n                        ChatMessage.create({content: target.name + \" is enlarged\"})\r\n                    }\r\n                },\r\n                    two: {\r\n                        label: \"Reduce\",\r\n                        callback: () => {\r\n                        let bonus = mwak +  \" -1d4\";\r\n                        let size = originalSize\r\n                        let newSize = (size > 1) ? (size -1) : (size - 0.3)\r\n                        ActorUpdate.execute(args[1],{\"data.bonuses.mwak.damage\" : bonus });\r\n                        TokenUpdate.execute(args[1],{\"width\": newSize, \"height\": newSize});\r\n                        TokenSetFlag.execute(args[1], 'world', 'enlageReduceSpell', originalSize)\r\n                        ChatMessage.create({content: target.name + \" is reduced\"})\r\n                        }\r\n                },\r\n            }\r\n        }).render(true);\r\n    }\r\n} else if(args[0] === \"off\" && target.getFlag('world', 'enlageReduceSpell')){\r\n    let newSize = target.getFlag('world', 'enlageReduceSpell')\r\n    ActorUpdate.execute(args[1],{\"data.bonuses.mwak.damage\" : mwak })\r\n    TokenUpdate.execute(args[1],{\"width\": newSize, \"height\": newSize});\r\n    TokenUnSetFlag.execute(args[1], 'world', 'enlageReduceSpell')\r\n    ChatMessage.create({content: target.name + \" is returned to normal size\"})\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"uZrGGtrtxUXZbYbe"}
{"name":"Banishment","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\n\r\nif (args[0] === \"on\") {\r\n    target.update({hidden : true});\r\nChatMessage.create({content: target.name + ' was banished'});\r\n}else {\r\n target.update({hidden : false})\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"vzDHS2zuvGJZ30sU"}
{"name":"TokenUnSetFlag","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"scope":"global","command":"//args[0] = token ID\r\n//args[1]-[3] = update data\r\n\r\nif(!args[0] || !args[1]) return ui.notifications.error(`${this.name}'s arguments are invalid.`);\r\n\r\ncanvas.tokens.get(args[0]).unsetFlag(args[1], args[2]);\r\n","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"x8eiKNDtJtdOAYtf"}
{"name":"Boots of Speed","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\r\nlet TokenSetFlag = game.macros.getName(\"TokenSetFlag\");\r\nlet TokenUnSetFlag = game.macros.getName(\"TokenUnSetFlag\");\r\nlet speed = parseInt(target.actor.data.data.attributes.speed.value);\r\n\r\nif (args[0] === \"on\") {\r\n    let newSpeed = speed * 2\r\n    ActorUpdate.execute(args[1],{\"speed\": newSpeed});\r\n    TokenSetFlag.execute(args[1], 'world', 'bootsOfSpeed', speed);\r\n} else {\r\n    let newSpeed = target.getFlag('world', 'bootsOfSpeed')\r\n    ActorUpdate.execute(args[1],{\"speed\": newSpeed});\r\n    TokenUnSetFlag.execute(args[1],'world', 'bootsOfSpeed');\r\n}\r\n","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"ZCO99svnQht5Orfg"}
{"name":"Boots of Striding","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\r\nlet TokenSetFlag = game.macros.getName(\"TokenSetFlag\");\r\nlet TokenUnSetFlag = game.macros.getName(\"TokenUnSetFlag\");\r\nlet speed = parseInt(target.actor.data.data.attributes.speed.value);\r\n\r\nif (!target.getFlag('world', 'bootsOfStriding')) {\r\n    let newSpeed = (speed < 30) ? 30 : speed;\r\n    console.log(newSpeed)\r\n    ActorUpdate.execute(args[1], { \"data.attributes.speed.value\": (newSpeed + \"ft\") });\r\n    TokenSetFlag.execute(args[1], 'world', 'bootsOfStriding', speed);\r\n} else if (target.getFlag('world', 'bootsOfStriding')) {\r\n    let newSpeed = target.getFlag('world', 'bootsOfStriding')\r\n    ActorUpdate.execute(args[1], { \"data.attributes.speed.value\": (newSpeed + \"ft\") });\r\n    TokenUnSetFlag.execute(args[1], 'world', 'bootsOfStriding');\r\n}\r\n","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"cM3L1XKfgs9IsTqR"}
{"name":"Invisibility ","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet TokenUpdate = game.macros.getName(\"TokenUpdate\");\r\nlet hidden = target.data.hidden\r\nif(args[0] === \"on\"){\r\nTokenUpdate.execute(args[1],{\"hidden\":true});\r\n} else {\r\n    TokenUpdate.execute(args[1],{\"hidden\": false});\r\n}","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"n58MeMZDsU6wdk5E"}
{"name":"Ring of Invisibility","permission":{"default":0,"SWj23mpjGzaSl512":3},"type":"script","flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"scope":"global","command":"let target = canvas.tokens.get(args[1]);\r\nlet TokenUpdate = game.macros.getName(\"TokenUpdate\");\r\nlet hidden = target.data.hidden;\r\nlet visible = hidden ? false : true;\r\nTokenUpdate.execute(args[1],{\"hidden\": visible});\r\n","author":"SWj23mpjGzaSl512","img":"icons/svg/dice-target.svg","actorIds":[],"_id":"lMAmkU13CpJ9KUUG"}
